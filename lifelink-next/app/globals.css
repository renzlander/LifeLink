@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.bg_lifelink {
  background-image: url("../public/lifelink_bg.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.gen_bg {
  background-image: url("../public/general_bg.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.prcmap {
  width: 100%;
  height: 50rem;
}

/* Define a fade-in animation for active steps */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px); /* Adjust the distance as needed */
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Define a fade-in and scale animation for active steps */
@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Define a fade-out and scale animation for inactive steps */
@keyframes fadeOutScale {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

/* Apply the animation to elements with the "animate-fade" class */
.animate-fade {
  transition: opacity 0.3s, transform 0.3s;
}

/* When active, apply the fade-in and scale animation */
.animate-fade.active {
  animation: fadeInScale 0.3s ease-in-out;
}

/* When inactive, apply the fade-out and scale animation */
.animate-fade.inactive {
  animation: fadeOutScale 0.3s ease-in-out;
}

